buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
  }
}

allprojects  {
  apply plugin: 'maven'

  group = 'com.github.tony19'

  def releaseVersion = "${baseVersion}-${buildVersion}"
  def developmentVersion = "${releaseVersion}-SNAPSHOT"
  version = project.hasProperty('ver') ? project.ver : developmentVersion
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.5
  targetCompatibility = 1.5

  test {
    include '**/*Test.class'

    // Skip fragile network tests (to be refactored later)
    exclude '**/net/**'

    // Skip performance tests, since they're already run in they're own 'perf' task
    exclude '**/*PerfTest*'

//    testLogging {
//      // Show that tests are run in the command-line output
//      events 'started', 'passed'
//    }
  }

  repositories {
    mavenLocal()

    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  dependencies {
    testCompile(group: 'junit', name: 'junit', version: '4.10') {
      exclude(module: 'hamcrest-core')
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
    testCompile group: 'org.robolectric', name: 'robolectric', version: '3.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.0'
  }

  compileJava {
    // Include debug symbols with `gradle build -Pdebug` on command line
    options.debug = project.hasProperty('debug')

    // Show deprecation warnings
    options.deprecation = true
  }
}

apply plugin: 'java'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'

task uberjar(type: Jar) {
  subprojects.each { subproject ->
    from files(subproject.sourceSets.main.output)
  }
}

modifyPom {
  project {
    name 'logback-android'
    description 'Advanced logging for Android apps'
    url 'https://github.com/bmuschko/gradle-nexus-plugin'
    inceptionYear '2005'

    scm {
      url 'https://github.com/tony19/logback-android'
      connection 'scm:git@github.com:tony19/logback-android.git'
      developerConnection 'scm:git:git@github.com:tony19/logback-android.git'
    }

    licenses {
      license {
        name 'Eclipse Public License - v 1.0'
        url 'http://www.eclipse.org/legal/epl-v10.html'
        distribution 'repo'
      }
      license {
        name 'GNU Lesser General Public License'
        url 'http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html'
        distribution 'repo'
      }
    }

    developers {
      developer {
        id 'tony19'
        name 'Tony Trinh'
        email 'tony19@gmail.com'
      }
    }
  }
}

extraArchive {
  sources = true
  tests = true
  javadoc = false
}

// We need to add our own javadoc task that ignores errors
// because there are several elements missing javadoc
task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc {
    failOnError = false
  }
}

// Creates combined javadocs for all subprojects
task javadocs(type: Javadoc) {
  source subprojects.collect { project -> project.sourceSets.main.allJava }
  classpath = files(subprojects.collect { project -> project.sourceSets.main.compileClasspath })
  failOnError = false
}
