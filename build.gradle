// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

  repositories {
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.1'
    classpath 'org.ajoberstar:grgit:2.1.1'
    classpath 'com.novoda:gradle-static-analysis-plugin:0.5.1'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}
plugins {
  id 'io.codearte.nexus-staging' version '0.11.0' // must be in root project
  id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'org.ajoberstar.grgit'
apply from: 'gradle/readme.gradle'

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

project.archivesBaseName = POM_ARTIFACT_ID

apply from: "${rootProject.projectDir}/gradle/analysis.gradle"
apply from: "${rootProject.projectDir}/gradle/docs.gradle"
apply from: "${rootProject.projectDir}/gradle/deploy.gradle"

allprojects {
  repositories {
    google()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  }
}

android {
  compileSdkVersion 28

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_5
    targetCompatibility JavaVersion.VERSION_1_5
  }

  defaultConfig {
    minSdkVersion 9
    targetSdkVersion 28
    versionCode VERSION_CODE.toInteger()
    versionName VERSION_NAME
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  lintOptions {
    checkAllWarnings true
    lintConfig rootProject.file('gradle/lint.xml')
  }
  testOptions {
    unitTests {
      includeAndroidResources = true

      all {
        testLogging {
          events 'failed'
          showStackTraces = true
          exceptionFormat = 'full'
        }
      }
    }
  }
}

dependencies {

  testImplementation('junit:junit:4.12') {
    exclude(module: 'hamcrest-core')
  }

  testImplementation 'org.hamcrest:hamcrest-junit:2.0.0.0'
  testImplementation 'org.robolectric:robolectric:4.0.2'
  testImplementation 'org.mockito:mockito-core:2.23.4'
  testImplementation 'joda-time:joda-time:2.10.1'

  // This dep is required when using Robolectric and targeting pre-21 SDKs.
  // Otherwise, tests fail with java.lang.NoClassDefFoundError.
  // https://github.com/robolectric/robolectric/issues/2562#issuecomment-263086503
  testImplementation 'org.robolectric:android-all:8.1.0-robolectric-r4458339'
  testImplementation 'com.icegreen:greenmail:1.5.9'
  testImplementation 'dom4j:dom4j:1.6.1'
  testImplementation 'org.easytesting:fest-assert:1.4'
  testImplementation "org.slf4j:integration:${slf4jVersion}"
  testImplementation "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
  testImplementation "org.slf4j:slf4j-api:${slf4jVersion}:tests"
  testImplementation "org.slf4j:slf4j-ext:${slf4jVersion}"
  testImplementation(group: 'org.subethamail', name: 'subethasmtp', version: '3.1.7') {
    exclude(module: 'slf4j-api')
  }

  compileOnly "org.slf4j:slf4j-api:${slf4jVersion}"

  // For SMTPAppender
  compileOnly 'com.sun.mail:android-mail:1.6.3'
  compileOnly 'com.sun.mail:android-activation:1.6.3'

  testImplementation 'ch.qos.cal10n:cal10n-api:0.8.1'
  testAnnotationProcessor 'ch.qos.cal10n:cal10n-api:0.8.1'
}

allprojects {
  tasks.withType(JavaCompile) {
    // Warn about deprecations
    //options.compilerArgs << '-Xlint:deprecation'
    // Warn about unchecked usages
    options.compilerArgs << '-Xlint:unchecked'
    // Don't warn about using source/target 1.5 option
    options.compilerArgs << '-Xlint:-options'

    options.debug(['debugLevel': 'source,lines,vars'])
    options.debug = VERSION_NAME.contains('SNAPSHOT')
  }

  tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
  }
}

release {
  tagTemplate = 'v_${version}'
  preTagCommitMessage = ':cloud: Release'
  tagCommitMessage = ':cloud: Release'
  newVersionCommitMessage = ':cloud: Bump'

  versionPropertyFile = '../gradle.properties'
  versionProperties = ['VERSION_NAME']

  git {
    requireBranch = ''
  }
}

nexusStaging {
  packageGroup = 'com.github.tony19'
}

install {
  repositories.mavenInstaller {
    pom.project {
      name "${GROUP}:${POM_NAME}"
      description POM_DESCRIPTION
      url POM_URL

      packaging 'aar'
      groupId GROUP
      artifactId POM_ARTIFACT_ID
      version VERSION_NAME

      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
      scm {
        connection POM_SCM_CONNECTION
        url POM_SCM_URL

      }
      developers {
        developer {
          name POM_DEVELOPER_NAME
          email POM_DEVELOPER_EMAIL
        }
      }
    }
  }
}


task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

afterEvaluate { project ->
  artifacts {
    archives androidJavadocsJar
    archives sourcesJar
  }
}