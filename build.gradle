
allprojects  {
  apply plugin: 'maven'

  group = 'com.github.tony19'

  def releaseVersion = "${baseVersion}-${buildVersion}"
  def developmentVersion = "${releaseVersion}-SNAPSHOT"
  version = project.hasProperty('ver') ? project.ver : developmentVersion
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.5
  targetCompatibility = 1.5

  test {
    include '**/*Test.class'

    // Skip fragile network tests (to be refactored later)
    exclude '**/net/**'

    // Skip performance tests, since they're already run in they're own 'perf' task
    exclude '**/*PerfTest*'

//    testLogging {
//      // Show that tests are run in the command-line output
//      events 'started', 'passed'
//    }
  }

  repositories {
    mavenLocal()

    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  configurations.all {
  }

  dependencies {
    testCompile(group: 'junit', name: 'junit', version: '4.10') {
      exclude(module: 'hamcrest-core')
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
    testCompile group: 'org.robolectric', name: 'robolectric', version: '3.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.0'
  }

  compileJava {
    // Include debug symbols with `gradle build -Pdebug` on command line
    options.debug = project.hasProperty('debug')

    // Show deprecation warnings
    options.deprecation = true
  }
}

apply plugin: 'java'

task uberjar(type: Jar) {
  subprojects.each { subproject ->
    from files(subproject.sourceSets.main.output)
  }
}

